ИС Дракон © Тышов Г.Н. A
9,,,,,01.01.2015,"Tahoma,1,10,0,0",10,,,,
2,1,9,,,,,"""Структура класса"""
36,2,60,90,,,,,,1,,,,,,,,0,
29,3,60,139,,-19,180,19,,3,,,Описание,,,"""Очередь Spiral."",,""MPMC FIFO lock-free dual-data очередь Spiral."",,""Очередь состоит из отдельных блоков (витков спирали). Операции с самими блоками скрыты от пользователя, позволяя регулировать лишь размер блока, и метод преобразования индекса, используемый при доступе к ячейкам блоков. И то, и другое задаётся посредством указания объекта-преобразователя, инкапсулирующего размер блока и зависящий от него метод преобразования. Больший размер блока даёт большее быстродействие, ценой повышения потребления памяти. Методы преобразования индекса, нацелены на снижение конкуренции за отдельные кеш-линии процессора, при многопоточном доступе к ячейкам со смежными индексами, но могут повышать объём используемой кеш-памяти, увеличивая, тем самым, количество кеш-промахов. Таким образом, при выборе размера блока и используемой методики преобразования, следует соблюдать баланс потребления памяти, и исходить из конкретного сценария работы очереди. Плюсом является то, что и размеры используемых блоков и методику преобразования можно свободно изменять прямо во время работы очереди, но следует учитывать, что изменения будут учтены лишь по прошествии некоторого времени - при размещении очередью новых блоков."",,""Spiral является FIFO-очередью, а именно: для любой пары последовательно помещённых в очередь элементов (или запросов) гарантируется соблюдение относительного порядка, при последовательном извлечении."",,""При исполнении большинства операций Spiral ведёт себя как wait-free очередь, лишь при смене блоков переходя в lock-free режим. Очередь не использует double-word примитивы синхронизации и, соответственно, не требует их программной или аппаратной поддержки."",,""Экземпляры очереди полностью потокобезопасны и не требуют использования внешней синхронизации, что, однако, не гарантируется для заданного преобразователя индексов, а также для объектов-элементов и объектов-запросов помещаемых в очередь."",,""Очередь определяет отношение happens-before между операциями помещения элемента в очередь, и изъятия этого элемента из очереди: Пусть x - операция помещения некоторого элемента, а y - операция изъятия этого элемента из очереди, тогда hb(x, y), что означает x happens-before y.""",,0,
36,4,60,548,,,,,,,,,,,,,,0,
31,5,60,203,,-15,210,15,,4,,,"""Типовые параметры""",,,"""Описание типовых параметров класса.""",,0,
30,6,60,263,,-15,180,15,,5,,,T,,,"""Тип элементов помещаемых в очередь поставщиком.""",,0,
30,7,60,323,,-15,180,15,,6,,,R,,,"""Тип запросов помещаемых в очередь потребителем.""",,0,
31,40,60,383,,-15,180,15,,8,,,"""Публичные поля""",,,"""Описание приватных статических полей класса.""",,0,
30,41,60,503,,-15,240,15,,2,,,DEFAULT_CONVERTER,,,"""Преобразователь, используемый по-умолчанию.""",,0,
30,42,60,443,,-15,240,15,,7,,,DEFAULT_BLOCK_SIZE,,,"""Размер блока, используемый по-умолчанию.""",,0,
2,29,6,,,,,"""Структура объекта"""
36,30,390,90,,,,,,1,,,,,,,,0,
31,31,390,135,,-15,180,15,,4,,,"""Приватные поля""",,,"""Описание приватных полей экземпляров класса.""",,0,
36,32,390,360,,,,,,,,,,,,,,0,
30,33,390,315,,-15,180,15,,2,,,blockSupplier,,,"""Поставщик блоков.""",,0,
30,34,390,195,,-15,180,15,,5,,,producerHead,,,"""Голова поставщиков.""",,0,
30,35,390,255,,-15,180,15,,3,,,consumerHead,,,"""Голова потребителей.""",,0,
0,8,6,,,,,Публичный
4,9,750,135,-90,-15,90,15,2,3,,,конструктор,,"Предусловия:,""* Указанный преобразователь индекса существует. Не проверяется явно.""","""Настраиваемый конструктор очереди Spiral."",,""Позволяет указать начальный преобразователь индекса, задающий размер блоков и методику преобразования индекса. Используемый преобразователь индекса можно свободно изменять во время работы очереди.""","Постусловия:,""* Голова поставщиков существует."",""* Голова потребителей существует."",""* Головы указывают на один и тот же связный узел."",""* Индексы обеих голов обнулены."",""* Установлен поставщик блоков, с указанным преобразователем индекса.""",0,
5,10,750,375,-60,-15,60,15,,,,,Конец,,,,,0,
24,11,900,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Начальный преобразователь индекса."",,Исключения:,""* Null pointer exception - Если указанный преобразователь индекса не существует.""",,0,
6,36,750,195,-90,-15,90,15,,4,,,"""Начальный узел""",,,"""Формируем начальный узел:"",""* Создаём и запоминаем поставщика блоков, с указанным преобразователем индекса."",""* Получаем у поставщика новый блок."",""* Создаём на основе блока связный узел.""",,0,
6,37,750,255,-90,-15,90,15,,5,,,Поставщики,,,"""Формируем голову поставщиков на основе начального узла.""",,0,
6,38,750,315,-90,-15,90,15,,1,,,Потребители,,,"""Формируем голову потребителей на основе начального узла.""",,0,
0,12,3,,,,,Публичный
4,13,1170,135,-90,-15,90,15,,2,,,Конструктор,,,"""Конструктор очереди Spiral."",,""Данный конструктор задаёт использование преобразователя индекса по-умолчанию в качестве начального. Используемый преобразователь индекса можно свободно изменять во время работы очереди.""","Постусловия:,""* Вызван настраиваемый конструктор, с умолчательным преобразователем индекса.""",0,
5,14,1170,255,-60,-15,60,15,,,,,Конец,,,,,0,
6,39,1170,195,-90,-15,90,15,,1,,,Конструктор,,,"""Обращаемся к настраиваемому конструктору, передав ему дефолтный преобразователь индекса.""",,0,
0,19,5,,,,,Публичный
4,20,1590,135,-90,-15,90,15,2,4,,,enqueue,,"Предусловия:,""* Указанный элемент существует. Не проверяется явно.""","""Помещение элемента в очередь."",,""Метод пытается поместить указанный элемент в конец очереди. Если операция завершается успешно, возвращает значение null. Однако, если в начале очереди присутствует запрос от потребителя, то помещение элемента прерывается, а упомянутый запрос извлекается из очереди и возвращается вызывающему методу.""","Постусловия:,""* Произведена попытка помещения указанного элемента в очередь поставщиков, с помощью универсального метода помещения в очередь."",""* Возвращён результат попытки.""",0,
5,21,1590,255,-60,-15,60,15,,,,,Конец,,,"""Возвращаем преобразованный к типу запроса результат попытки помещения элемента в очередь поставщиков.""",,0,
24,22,1740,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Элемент, помещаемый в конец очереди.""",,0,
25,23,1380,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* null - Если в очереди отсутствовали запросы от потребителя и помещение элемента в очередь прошло успешно."",""* Запрос от потребителя извлечённый из начала очереди - В противном случае."",,Исключения:,""* Null pointer exception - Если указанный элемент не существует.""",,0,
7,44,1590,195,-150,-15,150,15,,1,,,"""Универсальное помещение""",,,"""Обращаемся к универсальному методу помещения элемента в очередь поставщиков.""",,0,
0,24,5,,,,,Публичный
4,25,2160,135,-90,-15,90,15,2,4,,,dequeue,,"Предусловия:,""* Указанный запрос существует. Не проверяется явно.""","""Извлечение элемента из очереди."",,""Метод пытается извлечь из начала очереди и возвратить элемент, ранее помещённый в очередь поставщиком элементов. Если в начале очереди такой элемент отсутствует метод помещает в конец очереди указанный запрос и возвращает значение null.""","Постусловия:,""* Произведена попытка помещения указанного запроса в очередь потребителей, с помощью универсального метода помещения в очередь."",""* Возвращён результат попытки.""",0,
5,26,2160,255,-60,-15,60,15,,,,,Конец,,,"""Возвращаем преобразованный к типу элементов результат попытки помещения запроса в очередь потребителей.""",,0,
24,27,2310,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Запрос, помещаемый в конец очереди.""",,0,
25,28,1950,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Элемент, извлечённый из начала очереди."",""* null - Если в начале очереди отсутствовали элементы ранее помещённые поставщиком элементов."",,Исключения:,""* Null pointer exception - Если указанный запрос не существует.""",,0,
7,48,2160,195,-150,-15,150,15,,1,,,"""Универсальное помещение""",,,"""Обращаемся к универсальному методу помещения запроса в очередь потребителей.""",,0,
0,15,4,,,,,Публичный
4,16,2580,135,-90,-15,90,15,2,3,,,setConverter,,"Предусловия:,""* Указанный преобразователь индекса существует. Не проверяется явно.""","""Задание используемого преобразователя индекса."",,""Метод позволяет задать используемый при размещении новых блоков преобразователь индекса."",,""Следует обратить внимание, что заданный конвертер будет использоваться лишь по прошествии некоторого времени, при размещении очередью новых блоков. Кроме того, указанный конвертер должен быть безопасен для многопоточного доступа, так как какая-либо синхронизация при обращениям к конвертерам очередью не используется.""","Постусловия:,""* Указанный преобразователь передан поставщику блоков.""",0,
5,17,2580,255,-60,-15,60,15,,,,,Конец,,,,,0,
24,18,2730,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Новый преобразователь индекса."",,Исключения:,""* Null pointer exception - Если указанный преобразователь не существует.""",,0,
6,43,2580,195,-90,-15,90,15,,1,,,Поставщик,,,"""Обращаемся к поставщику блоков, передавая указанный преобразователь индекса.""",,0,
0,45,16,,,,,Приватный
4,46,3180,135,-120,-15,120,15,2,9,,,universalEnqueue,,"Предусловия:,""* Помещаемый объект существует. Не проверяется явно."",""* Атомарная ссылка существует. Не проверяется явно."",""* Голова целевой очереди существует. Не проверяется явно.""","""Универсальный метод помещения объекта в очередь."",,""Метод пытается поместить указанный объект в указанную очередь. При нехватке места в голове очереди, голова сдвигается к свободному блоку, который может быть при необходимости создан. После нахождения неиспользованного слота, производится попытка помещения указанного объекта в этот слот. Если слот ещё свободен, то объект помещается в него, после чего метод возвращает значение null. Если слот уже занят, то его содержимое изымается и возвращается вызывающему методу, при этом сам слот очищается.""","Постусловия:,""* Пока индекс слота выходил за пределы блока:"",""	* Индекс слота устанавливался равным размеру блока."",""	* Вызывался метод продвижения головы очереди."",""* Произведена попытка помещения указанного объекта в блок."",""* Возвращён результат попытки.""",0,
5,47,3180,600,-60,-15,60,15,,,,,Конец,,,"""Возвращаем результат попытки помещения.""",,0,
24,49,3360,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Помещаемый в очередь объект."",""* Атомарно изменяемая ссылка на голову целевой очереди.""",,0,
25,50,2940,135,-30,-15,90,15,0,,,,результат,,,"Результат:,""* Значение null, если указанный объект успешно помещён в целевую очередь."",""* В противном случае - значение изъятое из очереди."",,Исключения:,""* Null pointer exception - Если указанный объект, либо целевая очередь не существуют.""",,0,
36,51,3180,240,,,,,7,8,,,,,,,,0,C
8,52,3180,405,-90,-15,90,15,11,14,,,"""В блоке?""",,,"""Проверяем, находится ли индекс в пределах блока.""",,0,
36,53,3525,555,,,,,,,,,,,,,,0,
36,54,3525,240,,,,,,6,,,,,,,,0,
6,55,3180,285,-90,-15,90,15,,10,,,Блок,,,"""Получаем блок:"",""* Запоминаем голову."",""* Получаем блок."",""* Запоминаем размер блока.""",,0,
6,56,3180,195,-90,-15,90,15,,4,,,Подготовка,,,"""Новые переменные:"",""* Блок."",""* Индекс неиспользованного слота.""",,0,
6,57,3180,345,-90,-15,90,15,,5,,,Индекс,,,"""Атомарно получаем и увеличиваем индекс незанятого слота.""",,0,
36,58,3405,405,,,,,,15,,,,,,,,0,
36,59,3405,555,,,,,6,,,,,,,,,0,
7,60,3405,510,-90,-15,90,15,,12,,,Продвижение,,,"""Обращаемся к методу продвижения головы очереди.""",,0,
6,61,3180,465,-90,-15,90,15,,1,,,Помещение,,,"""Пытаемся поместить указанный объект в выбранный слот блока, запоминая результат попытки.""",,0,
6,62,3405,450,-90,-15,90,15,,13,,,Индекс,,,"""Устанавливаем индекс слота равным размеру блока.""",,0,
0,63,10,,,,,Приватный
4,64,3735,135,-120,-15,120,15,2,3,,,moveHeadForward,,"Предусловия:,""* Атомарно изменяемая ссылка на голову очереди существует. Не проверяется явно."",""* Указанная текущая голова очереди существует. Не проверяется явно.""","""Перемещение головы очереди."",,""Метод перемещает голову очереди к следующему узлу, при необходимости создавая его.""","Постусловия:,""* При необходимости создан новый узел списка блоков очереди."",""* Голова очереди передвинута на один из следующих узлов списка.""",0,
5,65,3735,465,-60,-15,60,15,,,,,Конец,,,,,0,
24,66,3915,135,-30,-15,90,15,,,,,аргументы,,,"Аргументы:,""* Атомарно изменяемая ссылка на голову очереди."",""* Текущая голова очереди."",,Исключения:,""* Null pointer exception - Если ссылка на голову очереди, или указанная текущая голова очереди не существует.""",,0,
6,67,3735,195,-90,-15,90,15,,4,,,"""Следующий узел""",,,"""Считываем ссылку на следующий узел связного списка блоков.""",,0,
8,68,3735,255,-90,-15,90,15,6,8,,,Существует?,,,"""Проверяем существование следующего узла.""",,0,D
36,69,3735,360,,,,,7,9,,,,,,,,0,
36,70,3870,255,,,,,,7,,,,,,,,0,
36,71,3870,360,,,,,,,,,,,,,,0,
6,72,3735,315,-90,-15,90,15,,5,,,"""Новый узел""",,,"""Создаём следующий узел списка блоков:"",""* Получаем новый блок у поставщика блоков."",""* Создаём на основе блока связный узел."",""* Пытаемся установить ссылку на созданный следующий узел."",""* Запоминаем возвращённое значение ссылки на следующий узел.""",,0,
6,73,3735,405,-90,-15,90,15,,1,,,Голова,,,"""Пытаемся передвинуть голову очереди:"",""* Создаём новую голову очереди, на основе следующего узла."",""* Пытаемся передвинуть атомарную ссылку на новую голову очереди.""",,0,
